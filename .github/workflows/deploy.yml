# name: Deploy Financial-Health-Check-BE App

# on:
#   push:
#     branches:
#       - main # Change to your specific branch
#       # - deployprod  # Additional branch for deployment

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: "20"

#       - name: Check Node.js version
#         run: node -v

#       - name: Set up SSH
#         uses: webfactory/ssh-agent@v0.5.1
#         with:
#           ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

#       - name: Deploy to DigitalOcean
#         env:
#           HOST: ${{ secrets.SERVER_DOMAIN }}
#           USERNAME: ${{ secrets.SERVER_USERNAME }}
#           TARGET_DIR: /var/www/Financial-Health-Check-BE
#           APP_NAME: Financial-Health-Check-BE
#           DATABASE_URL: ${{ secrets.DATABASE_URL }}
#           SWAGGER_PASSWORD: ${{secrets.SWAGGER_PASSWORD}}
#           SWAGGER_UUID: ${{secrets.SWAGGER_UUID}}
#           MAIN_PORT: ${{secrets.MAIN_PORT}}
#         run: |
#           ssh -o StrictHostKeyChecking=no $USERNAME@$HOST << EOF
#             export PATH=/root/.nvm/versions/node/v20.12.2/bin:$PATH
#             cd $TARGET_DIR
#             git pull origin ${GITHUB_REF#refs/heads/}
#             echo "DATABASE_URL=\"${DATABASE_URL}\"" > .env
#             echo "SWAGGER_PASSWORD=${SWAGGER_PASSWORD}" >> .env
#             echo "SWAGGER_UUID=${SWAGGER_UUID}" >> .env
#             echo "MAIN_PORT=${MAIN_PORT}" >> .env
#             npm install
#             npm run build
#             mv ecosystem.config.js ecosystem.config.cjs
#             npx prisma generate
#             npx prisma migrate deploy --preview-feature
#             if pm2 list | grep -q $APP_NAME; then
#               echo "Restarting application: $APP_NAME"
#               pm2 restart $APP_NAME
#             else
#               echo "Starting application: $APP_NAME"
#               pm2 start ecosystem.config.cjs
#             fi
#             pm2 save
#           EOF
name: Deploy Financial-Health-Check-BE App

on:
  push:
    branches:
      - main # Change to your specific branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Check Node.js version
        run: node -v

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to DigitalOcean
        env:
          HOST: ${{ secrets.SERVER_DOMAIN }}
          USERNAME: ${{ secrets.SERVER_USERNAME }}
          TARGET_DIR: /var/www/Financial-Health-Check-BE
          APP_NAME: financial-health-check-be
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SWAGGER_PASSWORD: ${{secrets.SWAGGER_PASSWORD}}
          SWAGGER_UUID: ${{secrets.SWAGGER_UUID}}
          MAIN_PORT: ${{secrets.MAIN_PORT}}
        run: |
          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST << EOF
            export PATH=/root/.nvm/versions/node/v20.12.2/bin:$PATH
            cd $TARGET_DIR
            git pull origin ${GITHUB_REF#refs/heads/}
            echo "DATABASE_URL=\"${DATABASE_URL}\"" > .env
            echo "SWAGGER_PASSWORD=${SWAGGER_PASSWORD}" >> .env
            echo "SWAGGER_UUID=${SWAGGER_UUID}" >> .env
            echo "MAIN_PORT=${MAIN_PORT}" >> .env
            npm install
            npm run build
            # ลบไฟล์ ecosystem.config.js และ ecosystem.config.cjs เก่า
            rm -f ecosystem.config.js ecosystem.config.cjs
            # ย้ายไฟล์ ecosystem.config.js ใหม่เป็น ecosystem.config.cjs
            mv ecosystem.config.js ecosystem.config.cjs
            npx prisma generate
            npx prisma migrate deploy
            if pm2 list | grep -q $APP_NAME; then
              echo "Restarting application: $APP_NAME"
              pm2 restart $APP_NAME
            else
              echo "Starting application: $APP_NAME"
              pm2 start ecosystem.config.cjs --name $APP_NAME
            fi
            pm2 save
          EOF
      - name: Notify deployment success
        run: echo "Deployment completed successfully"
