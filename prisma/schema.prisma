// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator markdown {
  provider = "prisma-markdown"
  output   = "./ERD.md"
  title    = "financial-health-check"
}

model EducationPlan {
  id               String   @id @unique @default(uuid())
  user_params      String
  user             User     @relation(fields: [user_params], references: [user_params])
  nickname         String
  age              String
  levelOfeducation String
  typeOfeducation  String
  yearsOfeducation String
  inflationRate    String
  deposit          String
  insuranceFund    String
  otherAssets      String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model ProtectionPlan {
  id                     String   @id @unique @default(uuid())
  user_params            String
  user                   User     @relation(fields: [user_params], references: [user_params])
  nickname               String
  age                    String
  initialMonthlyExpense  String
  numberOfYears          String
  adjustedYearlyExpenses String
  inflationRate          String
  homePayments           String
  carPayments            String
  otherDebts             String
  bankDeposit            String
  lifeInsuranceFund      String
  otherAssets            String
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}

model importance {
  id                  String   @id @unique @default(uuid())
  user_params         String
  user                User     @relation(fields: [user_params], references: [user_params])
  nickname            String
  age                 String
  protectionPlanOrder String
  healthPlanOrder     String
  retirementPlanOrder String
  educationPlanOrder  String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model User {
  id             String           @id @unique @default(uuid())
  user_params    String           @unique
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  EducationPlan  EducationPlan[]
  ProtectionPlan ProtectionPlan[]
  importance     importance[]
  HealthPlan     HealthPlan[]
  RetirementPlan RetirementPlan[]

}

model HealthPlan {
  id                                String   @id @unique @default(uuid())
  user_params                       String
  user                              User     @relation(fields: [user_params], references: [user_params])
  nickname                          String
  age                               String
  hospitals                         String
  dailyCompensationFromWelfare      String
  treatingSeriousIllness            String
  emergencyCosts                    String
  annualTreatment                   String
  roomFeeFromCompany                String
  dailyCompensationFromCompany      String
  treatingSeriousIllnessFromCompany String
  emergencyCostsFromCompany         String
  annualTreatmentFromCompany        String
  createdAt                         DateTime @default(now())
  updatedAt                         DateTime @updatedAt
}

model RetirementPlan {
  id            String @id @unique @default(uuid())
  user_params   String
  user          User   @relation(fields: [user_params], references: [user_params])
  nickname      String
  age           String
  livingCosts   String
  houseCosts    String
  internetCosts String
  clothingCosts String
  medicalCosts  String
  otherCosts    String

  retireAge     String
  lifExpectancy String
  inflationRate String
  deposit       String
  insuranceFund String
  otherAssets   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Plan {
  id     String  @id @default(uuid())
  data   Json[]
 
}
model SelectionLog {
  id            String   @id @unique @default(uuid())
  user_params   String
  selectedPlans Json
  timestamp     DateTime @default(now())
}